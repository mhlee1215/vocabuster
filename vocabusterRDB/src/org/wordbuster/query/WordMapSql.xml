<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="WordMapSql">

	<select id="retrieveWordMapCount" parameterClass="org.wordbuster.domain.VBWordMap" resultClass="Integer">
		SELECT count(*)  
    	FROM vbwordmap
    	WHERE 1=1
    	<isNotEmpty property="userid" >
    	and userid = '$userid$'
    	</isNotEmpty>
	</select>
	
	<select id="retrieveUserWordMapList" parameterClass="org.wordbuster.domain.VBMyWordSearchVO" resultClass="org.wordbuster.domain.VBWordMap">
		SELECT a.userid, a.wordname, a.score, a.delaycount, a.wrongcount, a.answercount, a.insertcount, b.meaningbundle 
    	FROM vbwordmap a left outer join vbword b on a.wordname = b.wordname
    	WHERE a.userid = '$searchUserid$'
    	<isNotEmpty property="searchKeyword">
    	AND a.wordname LIKE '%$searchKeyword$%'
    	</isNotEmpty>
    	<isNotEmpty property="searchExcludeKeyword">
    	AND a.wordname &lt;> '$searchExcludeKeyword$'
    	</isNotEmpty>
    	<isNotEmpty property="searchIsvalid">
    	AND a.isvalid = '$searchIsvalid$'
    	</isNotEmpty>
    	<isNotEmpty property="searchOrderString">
    	ORDER BY $searchOrderString$
    	</isNotEmpty>
    	LIMIT $pageSize$ OFFSET $pageOffset$
	</select>
	
	<select id="retrieveUserWordMapListCount" parameterClass="org.wordbuster.domain.VBMyWordSearchVO" resultClass="Integer">
		SELECT count(*) 
    	FROM vbwordmap a left outer join vbword b on a.wordname = b.wordname
    	WHERE a.userid = '$searchUserid$'
    	<isNotEmpty property="searchKeyword">
    	AND a.wordname LIKE '%$searchKeyword$%'
    	</isNotEmpty>
    	<isNotEmpty property="searchIsvalid">
    	AND a.isvalid = '$searchIsvalid$'
    	</isNotEmpty>
	</select>
	
	<select id="retrieveWordMap" parameterClass="org.wordbuster.domain.VBWordMap" resultClass="org.wordbuster.domain.VBWordMap">
		SELECT a.userid, a.wordname, a.score, a.delaycount, a.wrongcount, a.answercount, a.insertcount, b.meaningbundle
    	FROM vbwordmap a inner join vbword b on a.wordname = b.wordname
    	WHERE 
    	a.userid = $userid$
    	AND a.wordname = '$wordName$' 
	</select>
	
	<insert id="insertWordMap" parameterClass="org.wordbuster.domain.VBWordMap">
		INSERT INTO vbwordmap(userid, wordname, score, delaycount, wrongcount, answercount, insertcount, isvalid, admindate, categoryname) 
    	VALUES($userid$, '$wordName$', 0, 0, 0, 0, 1, '$isvalid$', DATE_FORMAT(now(), "%Y%m%d"), $categoryName$)
	</insert>
	
	<update id="updateWordMap" parameterClass="org.wordbuster.domain.VBWordMap">
		UPDATE vbwordmap 
    	SET 
    		userid = $userid$ 
    		<isNotEmpty property="score">
    		,score = $score$ 
    		</isNotEmpty>
    		<isNotEmpty property="delayCount">
    		,delaycount = $delayCount$
    		</isNotEmpty> 
    		<isNotEmpty property="wrongCount">
    		,wrongcount = $wrongCount$
    		</isNotEmpty> 
    		<isNotEmpty property="answerCount">
    		,answercount = $answerCount$
    		</isNotEmpty>
    		<isNotEmpty property="insertCount">
    		,insertcount = $insertCount$
    		</isNotEmpty>
    		<isNotEmpty property="categoryName">
    		,categoryname = $categoryName$
    		</isNotEmpty>
    	WHERE 
    		userid = $userid$
    		and wordname = '$wordName$' 
	</update>
	
	<delete id="deleteWordMap" parameterClass="org.wordbuster.domain.VBWordMap">
		DELETE FROM vbwordmap
    	WHERE 
    		1=1
    		<isNotEmpty property="userid">
    		AND userid = $userid$
    		</isNotEmpty>
    		<isNotEmpty property="wordName">
    		AND wordname = '$wordName$'
    		</isNotEmpty>
    		<isNotEmpty property="categoryName">
    		AND categoryname = $categoryName$
    		</isNotEmpty>  
	</delete>
	
	<select id="retrieveQuestion" parameterClass="org.wordbuster.domain.VBWordQuizVO" resultClass="org.wordbuster.domain.VBWordMap">
		select userid, wordname, score, delaycount, wrongcount, answercount, insertcount, isvalid, admindate
		from vbwordmap 
		where
			isvalid = 'Y'
		order by wrongcount asc, insertcount desc
    	LIMIT $toIndex$ OFFSET $fromIndex$
	</select>
</sqlMap>


